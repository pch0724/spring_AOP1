<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
						   http://www.springframework.org/schema/beans/spring-beans.xsd
						   http://www.springframework.org/schema/context
	                       http://www.springframework.org/schema/context/spring-context.xsd
	                       http://www.springframework.org/schema/aop
	                       http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- xml1 -->
	<bean id = "xml1" class = "kr.co.softsoldesk.beans.TestBean"></bean>
	<!-- advisor1 -->
	<bean id = "advisor1" class = "kr.co.softsoldesk.advisor.AdvisorClass"></bean>
	
	<!-- aop -->
	<!-- execution(* method1()) : *(패키지, 클래스 무관) method1() = 패키지 클래스 무관 method1이 실행되면 -->
	
	<aop:config>
		<aop:aspect ref="advisor1">
			<aop:pointcut id="point1" expression="execution(* method1())"/> 
				<aop:before method="beforeMethod" pointcut-ref="point1"/>
				<aop:after method="afterMethod" pointcut-ref="point1"/>
				<!-- <aop:around method="aroundMethod" pointcut-ref="point1"/> -->
				<aop:around method="aroundIntMethod" pointcut-ref="point1"/>
				<aop:after-returning method="afterReturningMethod" pointcut-ref="point1"/>
				<aop:after-throwing method="afterThrowingMethod" pointcut-ref="point1"/>
		</aop:aspect>
	</aop:config>
</beans>